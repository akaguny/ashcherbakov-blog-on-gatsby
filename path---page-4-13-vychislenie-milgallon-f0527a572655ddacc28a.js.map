{"version":3,"sources":["webpack:///path---page-4-13-vychislenie-milgallon-f0527a572655ddacc28a.js","webpack:///./.cache/json/page-4-13-vychislenie-milgallon.json"],"names":["webpackJsonp","532","module","exports","data","markdownRemark","html","frontmatter","date","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,kqGAAk3FC,aAAsVC,KAAA,aAAAC,KAAA,mCAAAC,MAAA,iCAAsGC","file":"path---page-4-13-vychislenie-milgallon-f0527a572655ddacc28a.js","sourcesContent":["webpackJsonp([259499281980832],{\n\n/***/ 532:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>стр 257\\nстр.194\\n—  <em>Задание:</em>\\n— Водителям небезразличен пробег их автомобилей. Один водитель записал<br>\\nданные о нескольких заправках своей машины, записывая пройденные мили и<br>\\nчисло залитых в бак галлонов бензина\\n[cut]</p>\\n<p>— Разработайте программу на C++, которая,\\nиспользуя оператор while, вводила бы пробег в милях и объем бензина в каждой\\nзаправке. Программа должна вычислять и выводить на экран число миль на<br>\\nгаллон для каждой заправки, а также общее значение миль на галлон по всем<br>\\nвведенным к данному моменту заправкам.\\n— Пример работы программы, то как она должна выглядеть для пользователя в конечном итоге\\n[spoiler=показать/спрятать]Введите пройденный путь (-1, если ввод закончен): 287\\nВведите расход бензина: 13\\nМиль/галлон для этой заправки: 22.076923\\nСуммарное значение миль/галлон: 22.076923</p>\\n<p>Введите пройденный путь (-1, если ввод закончен): 200\\nВведите расход бензина: 10\\nМиль/галлон для этой заправки: 20.000000\\nСуммарное значение миль/галлон: 21.173913</p>\\n<p>Введите пройденный путь (-1, если ввод закончен): 120\\nВведите расход бензина: 5\\nМиль/галлон для этой заправки: 24.000000\\nСуммарное значение миль/галлон: 21.678571 </p>\\n<p>Введите пройденный путь (-1, если ввод закончен): -1[/spoiler]\\n—  <em>Рекомендации:</em>\\n— использовать fixed и static_cast&#x3C;тип>(переменная), почитать на стр. 231 - 232</p>\\n<p>—  <em>Код:</em>\\n[spoiler=показать/скрыть]</p>\\n<pre><code>// стр 257 упражнение 4.13\\n#include &#x3C;iostream>\\nusing std::cin;\\nusing std::cout;\\nusing std::endl;\\nusing std::fixed;\\n\\nint main ()\\n{\\n    // Инициализация\\n    // double summMilesGalon = 0; // мили/галлон суммарно\\n    int summMiles = 0; // мили(путь) суммарно\\n    int summExpense = 0; // расход суммарно\\n    double milesGallon; // мили/галлон\\n    int expense; // расход\\n    int miles; // путь\\n    \\n    // Обработка данных\\n    cout &#x3C;&#x3C; \\\"Введите пройденный путь (-1, если ввод закончен): \\\"; // -1 контрольное значение\\n    cin >> miles;\\n    if (miles == -1)\\n    {\\n        cout &#x3C;&#x3C; \\\"\\nДанные введены не были, ввод закончен\\\" &#x3C;&#x3C; endl;\\n    }\\n    else\\n    {   \\n        while (miles != -1)\\n        {\\n            cout &#x3C;&#x3C; \\\"Введите расход бензина: \\\";\\n            cin >> expense;\\n            milesGallon = static_cast&#x3C;double>(miles) / expense;\\n            summExpense += expense;\\n            summMiles += miles;\\n            cout &#x3C;&#x3C; \\\"Миль/галлон для этой заправки: \\\" &#x3C;&#x3C; fixed &#x3C;&#x3C; milesGallon &#x3C;&#x3C; endl;\\n            cout &#x3C;&#x3C; \\\"Суммарное значение миль/галлон: \\\" &#x3C;&#x3C; fixed \\n            &#x3C;&#x3C; static_cast&#x3C;double>(summMiles) / summExpense &#x3C;&#x3C; endl;\\n            cout &#x3C;&#x3C; \\\"\\nВведите пройденный путь (-1, если ввод закончен): \\\"; // -1 контрольное значение\\n            cin >> miles;\\n        } \\n    }\\n    return 0;\\n}\\n</code></pre>\\n<p>[/spoiler]\\n—  <em>Код на codepad</em>: <a href=\\\"http://codepad.org/lr5d0qIt\\\">codepad</a>\\n—  <em>Файлы исходного кода:</em>\\nul</p>\\n<ul>\\n<li><a href=\\\"http://stud.ashcherbakov.ru/uploads/_pages/19/milesgalon.cpp\\\">milesgalon.cpp</a>\\n/ul\\n—  <em>ОС:</em> ArchLinux\\n—  <em>IDE:</em> Geany</li>\\n</ul>\",\"frontmatter\":{\"date\":\"2015-10-17\",\"path\":\"/page/4-13-vychislenie-milgallon\",\"title\":\"4-13 Вычисление миль/галлон\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---page-4-13-vychislenie-milgallon-f0527a572655ddacc28a.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>стр 257\\nстр.194\\n—  <em>Задание:</em>\\n— Водителям небезразличен пробег их автомобилей. Один водитель записал<br>\\nданные о нескольких заправках своей машины, записывая пройденные мили и<br>\\nчисло залитых в бак галлонов бензина\\n[cut]</p>\\n<p>— Разработайте программу на C++, которая,\\nиспользуя оператор while, вводила бы пробег в милях и объем бензина в каждой\\nзаправке. Программа должна вычислять и выводить на экран число миль на<br>\\nгаллон для каждой заправки, а также общее значение миль на галлон по всем<br>\\nвведенным к данному моменту заправкам.\\n— Пример работы программы, то как она должна выглядеть для пользователя в конечном итоге\\n[spoiler=показать/спрятать]Введите пройденный путь (-1, если ввод закончен): 287\\nВведите расход бензина: 13\\nМиль/галлон для этой заправки: 22.076923\\nСуммарное значение миль/галлон: 22.076923</p>\\n<p>Введите пройденный путь (-1, если ввод закончен): 200\\nВведите расход бензина: 10\\nМиль/галлон для этой заправки: 20.000000\\nСуммарное значение миль/галлон: 21.173913</p>\\n<p>Введите пройденный путь (-1, если ввод закончен): 120\\nВведите расход бензина: 5\\nМиль/галлон для этой заправки: 24.000000\\nСуммарное значение миль/галлон: 21.678571 </p>\\n<p>Введите пройденный путь (-1, если ввод закончен): -1[/spoiler]\\n—  <em>Рекомендации:</em>\\n— использовать fixed и static_cast&#x3C;тип>(переменная), почитать на стр. 231 - 232</p>\\n<p>—  <em>Код:</em>\\n[spoiler=показать/скрыть]</p>\\n<pre><code>// стр 257 упражнение 4.13\\n#include &#x3C;iostream>\\nusing std::cin;\\nusing std::cout;\\nusing std::endl;\\nusing std::fixed;\\n\\nint main ()\\n{\\n    // Инициализация\\n    // double summMilesGalon = 0; // мили/галлон суммарно\\n    int summMiles = 0; // мили(путь) суммарно\\n    int summExpense = 0; // расход суммарно\\n    double milesGallon; // мили/галлон\\n    int expense; // расход\\n    int miles; // путь\\n    \\n    // Обработка данных\\n    cout &#x3C;&#x3C; \\\"Введите пройденный путь (-1, если ввод закончен): \\\"; // -1 контрольное значение\\n    cin >> miles;\\n    if (miles == -1)\\n    {\\n        cout &#x3C;&#x3C; \\\"\\nДанные введены не были, ввод закончен\\\" &#x3C;&#x3C; endl;\\n    }\\n    else\\n    {   \\n        while (miles != -1)\\n        {\\n            cout &#x3C;&#x3C; \\\"Введите расход бензина: \\\";\\n            cin >> expense;\\n            milesGallon = static_cast&#x3C;double>(miles) / expense;\\n            summExpense += expense;\\n            summMiles += miles;\\n            cout &#x3C;&#x3C; \\\"Миль/галлон для этой заправки: \\\" &#x3C;&#x3C; fixed &#x3C;&#x3C; milesGallon &#x3C;&#x3C; endl;\\n            cout &#x3C;&#x3C; \\\"Суммарное значение миль/галлон: \\\" &#x3C;&#x3C; fixed \\n            &#x3C;&#x3C; static_cast&#x3C;double>(summMiles) / summExpense &#x3C;&#x3C; endl;\\n            cout &#x3C;&#x3C; \\\"\\nВведите пройденный путь (-1, если ввод закончен): \\\"; // -1 контрольное значение\\n            cin >> miles;\\n        } \\n    }\\n    return 0;\\n}\\n</code></pre>\\n<p>[/spoiler]\\n—  <em>Код на codepad</em>: <a href=\\\"http://codepad.org/lr5d0qIt\\\">codepad</a>\\n—  <em>Файлы исходного кода:</em>\\nul</p>\\n<ul>\\n<li><a href=\\\"http://stud.ashcherbakov.ru/uploads/_pages/19/milesgalon.cpp\\\">milesgalon.cpp</a>\\n/ul\\n—  <em>ОС:</em> ArchLinux\\n—  <em>IDE:</em> Geany</li>\\n</ul>\",\"frontmatter\":{\"date\":\"2015-10-17\",\"path\":\"/page/4-13-vychislenie-milgallon\",\"title\":\"4-13 Вычисление миль/галлон\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/page-4-13-vychislenie-milgallon.json\n// module id = 532\n// module chunks = 259499281980832"],"sourceRoot":""}