webpackJsonp([0xa84d47423dce],{571:function(e,n){e.exports={data:{markdownRemark:{html:'<p>_Пример ECMAScript3 совместимого кода(со спецификацией ECMAScript 5, если доступно)\n[Книги javascript] JavaScript Карманный справочник, стр 109\n<a href="">xcut</a>\n// Функция inherit() возвращает объект, наследующий\n// свойства прототипа p. В нём используется\n// введённая в ECMAScript 5 функция object.create()\n// если она определена(не возвращает undefined). В противном случае\n// применяется устаревшая методика.\nfunction inherit(p){\nif (p == null) //объект p не должен быть равен null\nthrow TypeError(); // throw - исключение, сигнал о том, что во время выполнения произошла ошибка //(стр.97), если так, то генерируем ошибку TypeError() - для ECMASCript3/5 в нестрогом режиме, т.к\n// если явно не указать, то интерпретатор никак не отреагирует.\nif(Object.create) // Вызов Object.create()\nreturn Object.create(p)\nvar t = typeof p; // Убедимся, что p -- объект\nif (t !== "object" &#x26;&#x26; t !== "function")\nthrow TypeError();\nfunction f() {}; // определение конструктора\nf.prototype = p // установка свойства prototype\nreturn new f(); // создание наследника p\n}\n[/pre]</p>\n<script>\n// Функция inherit() возвращает объект, наследующий\n// свойства прототипа p. В нём используется\n// введённая в ECMAScript 5 функция object.create()\n// если она определена(не возвращает undefined). В противном случае\n// применяется устаревшая методика.\nfunction inherit(p){\nif (p == null) //объект p не должен быть равен null\nthrow TypeError(); // throw - исключение, сигнал о том, что во время выполнения произошла ошибка //(стр.97), если так, то генерируем ошибку TypeError() - для ECMASCript3/5 в нестрогом режиме, т.к\n// если явно не указать, то интерпретатор никак не отреагирует.\nif(Object.create) // Вызов Object.create()\nreturn Object.create(p)\nvar t = typeof p; // Убедимся, что p -- объект\nif (t !== "object" && t !== "function")\nthrow TypeError();\nfunction f() {}; // определение конструктора\nf.prototype = p // установка свойства prototype\nreturn new f(); // создание наследника p\n}\n</script>\n<p>_ Протестировать работу кода можно из консоли.\n_ Для этого в код статьи добавлен код скрипта(можно найти в исходном коде страницы, нажав F12)\n[image=http://stud.ashcherbakov.ru/uploads/<em>pages/26/mini/snimok-ekrana</em>2015-10-17<em>13-43-33.png snimok-ekrana</em>2015-10-17_13-43-33.png]<a href="http://stud.ashcherbakov.ru/uploads/_pages/26/snimok-ekrana_2015-10-17_13-43-33.png%5B/image">http://stud.ashcherbakov.ru/uploads/<em>pages/26/snimok-ekrana</em>2015-10-17_13-43-33.png[/image</a>]\n[spoiler= ! Внимание]Это не будет работать если вы используете визуальный редактор, по крайней мере необходимо будет его на время откюбчить и вставить код в исходный текст статьи(читайте документацию по своему редактору)[/spoiler]\n_ Сам тест:\n<a href="">show test</a><a href="http://stud.ashcherbakov.ru/uploads/_pages/26/snimok-ekrana_2015-10-17_13-42-07.png%5B/image">http://stud.ashcherbakov.ru/uploads/<em>pages/26/snimok-ekrana</em>2015-10-17_13-42-07.png[/image</a>]\n_ В консоли(F12 => console) создаём объект - родитель:\n[pre lang=js]// Создадим тестовый родительский объект\nvar testParentObject = {\n// добавим произвольные свойства\ntesOne : "Hellow",\ntestTwo : "World"\n};[/pre]\n_ создадим дочерний объект, успех - если у дочернего объекта будут те-же свойства\n[pre lang=js]inherit(testParentObject)[/pre]\n_ ответ\n[pre lang=js]Object {tesOne: "Hellow", testTwo: "World"}[/pre]\nФункция вернула объект с теме-же свойствами, а это то, чего мы и хотели добиться[/show]</p>',frontmatter:{date:"2015-10-17",path:"/page/sozdanie-obekta-nasledujushhego-prototip",title:"Создание объекта, наследующего прототип"}}},pathContext:{}}}});
//# sourceMappingURL=path---page-sozdanie-obekta-nasledujushhego-prototip-f57516886045a435b958.js.map