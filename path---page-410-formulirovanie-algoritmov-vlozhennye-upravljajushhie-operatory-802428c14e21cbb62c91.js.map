{"version":3,"sources":["webpack:///path---page-410-formulirovanie-algoritmov-vlozhennye-upravljajushhie-operatory-802428c14e21cbb62c91.js","webpack:///./.cache/json/page-410-formulirovanie-algoritmov-vlozhennye-upravljajushhie-operatory.json"],"names":["webpackJsonp","536","module","exports","data","markdownRemark","html","frontmatter","date","path","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,mqGAA+2FC,aAA0VC,KAAA,aAAAC,KAAA,2EAAAC,MAAA,qEAAkLC","file":"path---page-410-formulirovanie-algoritmov-vlozhennye-upravljajushhie-operatory-802428c14e21cbb62c91.js","sourcesContent":["webpackJsonp([72285093220749],{\n\n/***/ 536:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>— Как программировать на C++ Дейтел, стр. 233\\n— Хотя данный пример принципиально от примера 4.9 не отличается, к нему есть упражнение 4.20, где нас попросят модифицировать пример 4.10</p>\\n<p>[xcut]</p>\\n<p>— Псевдокод\\n[spoiler=показать/скрыть]\\n— Инициализировать нулём счётчик сдавших\\n— Инициализировать нулём счётчик не сдавших\\n— Инициализировать единицей счётчик студентов\\n—\\n— Пока счётчик студентов меньше или равен десяти\\n— </p>\\n<p>  Предложить пользователю ввести очередной результат экзамена</p>\\n<p>  Ввести следующий результат экзамена</p>\\n<p>—\\nЕсли студент сдал экзамен</p>\\n<pre><code>    * Прибавить единицу к счётчику сдавших\\n</code></pre>\\n<p>  Иначе</p>\\n<pre><code>    * Прибавить единицу к счётчику студентов\\n</code></pre>\\n<p>[/spoiler]</p>\\n<p>—  <em>Код:</em>\\n[spoiler=показать/скрыть]</p>\\n<p>—  <em>Интерфейс класса</em></p>\\n<pre><code>//рис. 4.16: Analysis.h\\n// Определение класса Analysis, анализирующего результаты экзамена.\\n// Элемент-функции определяются в Analysis.cpp\\n\\nclass Analysis\\n{\\n    public:\\n    void processExamResults (); // обработать 10 студентов\\n}; // конец класса Analysis\\n</code></pre>\\n<p>—  <em>Реализация класса</em></p>\\n<pre><code>// Рис 4.17\\n#include &#x3C;iostream>\\nusing std::cin;\\nusing std::cout;\\nusing std::endl;\\n\\n// Включить определение класса Analysis из Analysis.h\\n#include \\\"Analysis.h\\\"\\n\\n// Обработать экзаменационные результаты 10 студентов\\nvoid Analysis::processExamResults()\\n{\\n    // инициализация переменных при объявлении\\n    int passes = 0; // число сдавших\\n    int failures = 0; // число провалившихся\\n    int studentCounter = 1; // счётчик студентов\\n    int result; // один результат экзамена (1 = сдал, 2 = не сдал)\\n\\n    //обработать 10 студентов, используя цикл по счётчику\\n    while (studentCounter &#x3C;= 10)\\n    {\\n        // запросить у пользвателя и ввести значение\\n        cout &#x3C;&#x3C; \\\"Enter result (1 = pass, 2 = fail) : \\\";\\n        cin >> result; // ввести результат\\n        // if..else вложенный в while\\n        if( result == 1)\\n        {\\n            passes = passes +1;\\n        }\\n        else\\n        {\\n            failures = failures +1;\\n        }\\n        // увеличить studentCounter на 1, что-бы цикл мог закончиться\\n        studentCounter = studentCounter + 1;\\n    }//конец цикла while\\n\\n    //Этап завершения; вывести число сдавших и не сдавших\\n    cout &#x3C;&#x3C; \\\"Сдавших: \\\" &#x3C;&#x3C; passes &#x3C;&#x3C; \\\"\\nПровалились \\\" &#x3C;&#x3C; failures &#x3C;&#x3C; endl;\\n    // определить прошло ли более восьми студентов\\n    if ( passes > 8 )\\n        cout    &#x3C;&#x3C; \\\"Повысить стоимость\\\" &#x3C;&#x3C; endl;\\n} // конец функции processExamResults\\n</code></pre>\\n<p>—  <em>Тестирование класса</em></p>\\n<pre><code>// рис 4.18\\n\\n#include  \\\"Analysis.h\\\"\\n\\nint main()\\n{\\n    Analysis application;\\n    application.processExamResults();\\n    return 0;\\n}\\n</code></pre>\\n<p>[/spoiler]\\n—  <em>Код на codepad</em>: <a href=\\\"http://codepad.org/fC0abboS\\\">codepad</a>\\n—  <em>Файлы исходного кода(в архиве):</em>\\nul</p>\\n<ul>\\n<li><a href=\\\"http://stud.ashcherbakov.ru/uploads/_pages/17/analysis.7z\\\">Analysis.7z</a>\\n/ul\\n—  <em>ОС:</em> ArchLinux\\n—  <em>IDE:</em> Geany</li>\\n</ul>\",\"frontmatter\":{\"date\":\"2015-10-11\",\"path\":\"/page/410-formulirovanie-algoritmov-vlozhennye-upravljajushhie-operatory\",\"title\":\"4.10 Формулирование алгоритмов: вложенные управляющие операторы\"}}},\"pathContext\":{}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---page-410-formulirovanie-algoritmov-vlozhennye-upravljajushhie-operatory-802428c14e21cbb62c91.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>— Как программировать на C++ Дейтел, стр. 233\\n— Хотя данный пример принципиально от примера 4.9 не отличается, к нему есть упражнение 4.20, где нас попросят модифицировать пример 4.10</p>\\n<p>[xcut]</p>\\n<p>— Псевдокод\\n[spoiler=показать/скрыть]\\n— Инициализировать нулём счётчик сдавших\\n— Инициализировать нулём счётчик не сдавших\\n— Инициализировать единицей счётчик студентов\\n—\\n— Пока счётчик студентов меньше или равен десяти\\n— </p>\\n<p>  Предложить пользователю ввести очередной результат экзамена</p>\\n<p>  Ввести следующий результат экзамена</p>\\n<p>—\\nЕсли студент сдал экзамен</p>\\n<pre><code>    * Прибавить единицу к счётчику сдавших\\n</code></pre>\\n<p>  Иначе</p>\\n<pre><code>    * Прибавить единицу к счётчику студентов\\n</code></pre>\\n<p>[/spoiler]</p>\\n<p>—  <em>Код:</em>\\n[spoiler=показать/скрыть]</p>\\n<p>—  <em>Интерфейс класса</em></p>\\n<pre><code>//рис. 4.16: Analysis.h\\n// Определение класса Analysis, анализирующего результаты экзамена.\\n// Элемент-функции определяются в Analysis.cpp\\n\\nclass Analysis\\n{\\n    public:\\n    void processExamResults (); // обработать 10 студентов\\n}; // конец класса Analysis\\n</code></pre>\\n<p>—  <em>Реализация класса</em></p>\\n<pre><code>// Рис 4.17\\n#include &#x3C;iostream>\\nusing std::cin;\\nusing std::cout;\\nusing std::endl;\\n\\n// Включить определение класса Analysis из Analysis.h\\n#include \\\"Analysis.h\\\"\\n\\n// Обработать экзаменационные результаты 10 студентов\\nvoid Analysis::processExamResults()\\n{\\n    // инициализация переменных при объявлении\\n    int passes = 0; // число сдавших\\n    int failures = 0; // число провалившихся\\n    int studentCounter = 1; // счётчик студентов\\n    int result; // один результат экзамена (1 = сдал, 2 = не сдал)\\n\\n    //обработать 10 студентов, используя цикл по счётчику\\n    while (studentCounter &#x3C;= 10)\\n    {\\n        // запросить у пользвателя и ввести значение\\n        cout &#x3C;&#x3C; \\\"Enter result (1 = pass, 2 = fail) : \\\";\\n        cin >> result; // ввести результат\\n        // if..else вложенный в while\\n        if( result == 1)\\n        {\\n            passes = passes +1;\\n        }\\n        else\\n        {\\n            failures = failures +1;\\n        }\\n        // увеличить studentCounter на 1, что-бы цикл мог закончиться\\n        studentCounter = studentCounter + 1;\\n    }//конец цикла while\\n\\n    //Этап завершения; вывести число сдавших и не сдавших\\n    cout &#x3C;&#x3C; \\\"Сдавших: \\\" &#x3C;&#x3C; passes &#x3C;&#x3C; \\\"\\nПровалились \\\" &#x3C;&#x3C; failures &#x3C;&#x3C; endl;\\n    // определить прошло ли более восьми студентов\\n    if ( passes > 8 )\\n        cout    &#x3C;&#x3C; \\\"Повысить стоимость\\\" &#x3C;&#x3C; endl;\\n} // конец функции processExamResults\\n</code></pre>\\n<p>—  <em>Тестирование класса</em></p>\\n<pre><code>// рис 4.18\\n\\n#include  \\\"Analysis.h\\\"\\n\\nint main()\\n{\\n    Analysis application;\\n    application.processExamResults();\\n    return 0;\\n}\\n</code></pre>\\n<p>[/spoiler]\\n—  <em>Код на codepad</em>: <a href=\\\"http://codepad.org/fC0abboS\\\">codepad</a>\\n—  <em>Файлы исходного кода(в архиве):</em>\\nul</p>\\n<ul>\\n<li><a href=\\\"http://stud.ashcherbakov.ru/uploads/_pages/17/analysis.7z\\\">Analysis.7z</a>\\n/ul\\n—  <em>ОС:</em> ArchLinux\\n—  <em>IDE:</em> Geany</li>\\n</ul>\",\"frontmatter\":{\"date\":\"2015-10-11\",\"path\":\"/page/410-formulirovanie-algoritmov-vlozhennye-upravljajushhie-operatory\",\"title\":\"4.10 Формулирование алгоритмов: вложенные управляющие операторы\"}}},\"pathContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/page-410-formulirovanie-algoritmov-vlozhennye-upravljajushhie-operatory.json\n// module id = 536\n// module chunks = 72285093220749"],"sourceRoot":""}