webpackJsonp([0xd7f3171de121],{557:function(n,p){n.exports={data:{markdownRemark:{html:'<p>обрезка страниц книги для удобного чтения не электронной книге с разрешением 1024х758 (для другого разрешения достаточно поменять 1024х758 на своё в коде в 3 строчках)</p>\n<p>[cut]</p>\n<pre><code>#!/bin/bash\n# скрипт для преобразования PDF и DJVU файлов в формат для эклектронной книги 1024х758\n\n# использование: скрипт документ -in_[pdf|djvu] -out_[pdf|djvu] -img_format_[png|jpg]\nin_format=$2\nout_format=$3\nimg_format=$4\n\nif [ "$img_format" = "-img_format_png" ];\nthen\n  img_format=png\nelse\n  img_format=jpg\nfi\n\nmask="*.*"\n\nif [ "$in_format" = "-in_djvu" ];\nthen\n   # если это DJVU то приобразовываем его в многостраничный TIFF\n   ddjvu -format=tiff $1 1.tiff\n   # режем получившийся TIFF в по страницам\n   tiffsplit 1.tiff\n   rm 1.tiff\n   mask="x*.tif"\nelse\n   # режем PDF по страницам\n   pdftk $1 burst\n   mask="pg_*.pdf"\nfi\n\npages=""\n\n# обработать все страницы\nfor p in `ls -1 $mask`; do\n\n   # конвертируем страничку в JPG и преобразуем в оттенки серого\n   if [ "$in_format" = "-in_djvu" ];\n   then\n      convert -colorspace gray -normalize -contrast $p $p.${img_format}\n   else\n      convert -density 300 -colorspace gray -normalize -contrast $p $p.${img_format}\n   fi\n\n   rm $p\n\n   p=${p}.${img_format}\n\n   # обрезаем все поля автоматически\n   convert -trim +repage $p $p\n   \n   # вырезаем верхнюю часть картинки\n   convert -gravity North -crop 100%x35% +repage $p 1_$p\n   # вырезаем вторую часть картинки\n   convert -gravity Center -crop 100%x35% +repage $p 2_$p\n   # вырезаем третью часть картинки\n   convert -gravity South -crop 100%x35% +repage $p 3_$p\n\n   rm $p\n   \n   # меняем разрешение на 1024х758\n   convert -scale 1024x758! 1_$p 1_$p\n   convert -scale 1024x758! 2_$p 2_$p\n   convert -scale 1024x758! 3_$p 3_$p\n   \n   # разворачиваем на 90 градусов\n   convert -rotate 90 1_$p 1_$p\n   convert -rotate 90 2_$p 2_$p\n   convert -rotate 90 3_$p 3_$p\n   \n   # улучшаем качество картинки\n   convert -sharpen 0.01 1_$p 1_$p\n   convert -sharpen 0.01 2_$p 2_$p\n   convert -sharpen 0.01 3_$p 3_$p\n   \n   # если выходной файл DJVU\n   if [ "$out_format" = "-out_djvu" ];\n   then\n      # конвертируем странички в djvu-формат\n      c44 -dpi 150 1_$p 1_$p.djvu\n      c44 -dpi 150 2_$p 2_$p.djvu\n      c44 -dpi 150 3_$p 3_$p.djvu\n      \n      # список страничек\n      pages=${pages}\' 1_\'${p}\'.djvu 2_\'${p}\'.djvu 3_\'${p}\'.djvu\'\n    else\n      convert -define pdf:use-trimbox=true -density 200 1_$p 1_$p.pdf\n      convert -define pdf:use-trimbox=true -density 200 2_$p 2_$p.pdf\n      convert -define pdf:use-trimbox=true -density 200 3_$p 3_$p.pdf\n      \n      # список страничек\n      pages=${pages}\' 1_\'${p}\'.pdf 2_\'${p}\'.pdf 3_\'${p}\'.pdf\'\n    fi\n\n    rm 1_$p 2_$p 3_$p\ndone\n\n# создаем выходной файл книжки\nif [ "$out_format" = "-out_djvu" ];\nthen\n  # собрать в единый DjVu\n  djvm -c out.djvu $pages\nelse\n  # собрать в единый PDF\n  pdftk $pages cat output out.pdf\nfi\n\nrm $pages\n</code></pre>\n<p>— Запуск:\n— Открываем консоль в папке со скриптом и файлом, который необходимо подрезать.\n— Пишем </p>\n<pre><code>— Если наш файл Ytug.pdf\n— Источник скрипта: http://geektimes.ru/post/130308/\n— Также я использую Master Pdf Editor - выбираю сколько обрезать и он просто режет все страницы по заданным отступам.\n</code></pre>',frontmatter:{date:"2015-11-21",path:"/page/pyton-skript-dlja-narezki-knigi-na-udobnochitaemye-chasti-iz-1-stranicy",title:"Pyton скрипт оптимизации книги для чтения на e-ink"}}},pathContext:{}}}});
//# sourceMappingURL=path---page-pyton-skript-dlja-narezki-knigi-na-udobnochitaemye-chasti-iz-1-stranicy-c93f17ff0927173df0e1.js.map