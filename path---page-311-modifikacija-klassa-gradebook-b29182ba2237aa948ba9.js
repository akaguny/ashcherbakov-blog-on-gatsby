webpackJsonp([42153675984806],{534:function(e,n){e.exports={data:{markdownRemark:{html:'<p>стр.194</p>\n<p>[cut]</p>\n<p>—  <em>Задание:</em>\n— a) Введите второй элемент данных string, представляющий имя преподавателя,\nведущего курс.\n— b) Предусмотрите в классе set-функцию для изменения имени преподавателя\nи get-функцию для его извлечения.\n— c) Модифицируйте конструктор, чтобы он специфицировал два параметра: один\nдля названия курса и второй — для имени преподавателя.\n— d) Модифицируйте элемент-функцию displayMessage так, чтобы она сначала\nвыводила приветствие и название курса, а затем «This course is presented by: »\nи имя преподавателя.\n—  <em>Рекомендации:</em>\n— Выполняйте модификацию в том порядке, в котором это предложено в задании.\n—  <em>Код:</em>\n[spoiler=Показать]\n—  <em>Интерфейс класса</em></p>\n<pre><code>// Рис. 3.15 GradeBook.h\n// Определение класса GradeBook представляет собой открытый интерфейс\n// класса. Определение элемент-функции находится в GradeBook.cpp\n#include &#x3C;string> // программа использует стандартный класс string\nusing std::string;\n\n// определение класа GradeBook\nclass GradeBook\n{\npublic:\n    GradeBook ( string name1, string name2 ); // конструктор, инициализирующий courseName\n    void setCourseName (string name1); // установает courseName\n    string getCourseName(); // получает название курса\n    void setTeacherName (string name2); // устанавливает им преподавателя\n    string getTeacherName(); // получает имя преподавателя\n    void displayMessage(); // выводит сообщение приветствия\n    private:\n        string courseName; //  название курса для данного GradeBook\n        string teacherName; //  название курса для данного GradeBook\n};  //конец класса GradeBook\n</code></pre>\n<p>—  <em>Реализация класса</em></p>\n<pre><code>// Рис. 3.16 GradeBook.cpp\n// Реализация элемент-функции GradeBook\n// Фунция setCourseName производит подтверждение данных.\n#include &#x3C;iostream>\nusing std::cout;\nusing std::endl;\n\n#include "GradeBook.h" // включить определение класса GradeBook\n\n// конструктор инициализирует courseName переданный строкой\nGradeBook::GradeBook (string name1, string name2)\n{\n    setCourseName(name1); // инициализировать вызовом set-функции\n    setTeacherName(name2); // инициализировать вызовом set-функции\n} // конец конструктора GradeBook\n\n// Функция, устанавливающая название курса\n// гарантирует, что название курса в пределах 25 символов\nvoid GradeBook::setCourseName(string name)\n    {\n        if ( name.length() &#x3C;= 25 ) // если не более 25 символов\n        {\n            courseName = name; // сохранить название курса в объекте\n        }\n        if ( name.length() > 25 ) // если больше 25\n        {\n            courseName = name.substr( 0, 25 ); // сохранить н.к. в об. начать с 0, длина 25\n            cout &#x3C;&#x3C; "Имя "" &#x3C;&#x3C; name &#x3C;&#x3C; "" за пределами максимальной длины.\n"\n            &#x3C;&#x3C; "ограничение courseName - первые 25 символов\n" &#x3C;&#x3C; endl;\n        }\n    } // конец функции setCourseName\n\n// функция, получающая название курса\nstring GradeBook::getCourseName()\n    {\n        return courseName; // возвратить courseName объекта\n    }\n// этот оператор вызывает getCourseName, что-бы получить название курса, представленного данным GradeBook\n\n// Функция, устанавливающая имя преподавателя\nvoid GradeBook::setTeacherName(string name)\n    {\n        teacherName = name; // сохранить название курса в объекте\n    } // конец функции setTeacherName\n\n// функция, получающая имя преподавателя\nstring GradeBook::getTeacherName()\n    {\n        return teacherName; // возвратить teacherName\n    } // конец фунцкии getTeacherName\n\nvoid GradeBook::displayMessage()\n    {\n        cout &#x3C;&#x3C; "Добро пожаловть в классный журнал \n" &#x3C;&#x3C; getCourseName() &#x3C;&#x3C; "..." &#x3C;&#x3C; endl;\n        cout &#x3C;&#x3C; "Курс ведёт: \n" &#x3C;&#x3C; getTeacherName() &#x3C;&#x3C; "\n" &#x3C;&#x3C; endl;\n    }// конец функции displayMessage\n</code></pre>\n<p>—  <em>Тестирование класса</em></p>\n<pre><code>// Рис. 3.10: fig03_10.cpp\n// Включение класса GradeBook из GrradeBook.h в главную программу\n#include &#x3C;iostream>\nusing std::cout;\nusing std::endl;\n\n#include "GradeBook.h" // включить определение класса GradeBook\n\n\n// фукнция main начинает исполнение программы\nint main ()\n    {\n    // создать два объекта GradeBook\n    GradeBook gradeBook1 ("CS101 Введение в программирование на C++", "Иванов");\n    GradeBook gradeBook2 ("CS102 структура данных в C++", "Титов");\n    // вывести исходное значение courseName для каждого GradeBook\n    cout &#x3C;&#x3C; "Сейчас есть 2 журнала:\ngradeBook1 созданная для: " &#x3C;&#x3C; gradeBook1.getCourseName() &#x3C;&#x3C; "\n" &#x3C;&#x3C; "gradebook2 созданная для: " &#x3C;&#x3C; gradeBook2.getCourseName() &#x3C;&#x3C; endl;\n    gradeBook1.displayMessage() ;\n    gradeBook2.displayMessage() ;\n    return 0;\n    }// конец main\n</code></pre>\n<p>[/spoiler]\n—  <em>Код на codepad</em>: <a href="http://codepad.org/HqfPrP6B">http://codepad.org/HqfPrP6B</a>\n—  <em>Файлы исходного кода:</em>\nul</p>\n<ul>\n<li><a href="http://stud.ashcherbakov.ru/uploads/_pages/13/GradeBook.cpp">GradeBook.cpp</a></li>\n<li><a href="http://stud.ashcherbakov.ru/uploads/_pages/13/GradeBook.h">GradeBook.h</a></li>\n<li><a href="http://stud.ashcherbakov.ru/uploads/_pages/13/fig03_13.cpp">fig03_13.cpp</a>\n/ul\n—  <em>ОС:</em> ArchLinux\n—  <em>IDE:</em> Geany</li>\n</ul>',frontmatter:{date:"2015-09-30",path:"/page/311-modifikacija-klassa-gradebook",title:"3.11 Модификация класса GradeBook"}}},pathContext:{}}}});
//# sourceMappingURL=path---page-311-modifikacija-klassa-gradebook-b29182ba2237aa948ba9.js.map