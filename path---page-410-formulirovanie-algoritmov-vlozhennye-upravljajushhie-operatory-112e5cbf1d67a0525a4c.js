webpackJsonp([72285093220749],{335:function(n,s){n.exports={data:{markdownRemark:{html:'<p>_ Как программировать на C++ Дейтел, стр. 233\n_ Хотя данный пример принципиально от примера 4.9 не отличается, к нему есть упражнение 4.20, где нас попросят модифицировать пример 4.10</p>\n<p>[xcut]</p>\n<p>_ Псевдокод\n[spoiler=показать/скрыть]\n_ Инициализировать нулём счётчик сдавших\n_ Инициализировать нулём счётчик не сдавших\n_ Инициализировать единицей счётчик студентов\n_\n_ Пока счётчик студентов меньше или равен десяти\n_ </p>\n<p>_(pad10-l) Предложить пользователю ввести очередной результат экзамена</p>\n<p>_(pad10-l) Ввести следующий результат экзамена</p>\n<p>_\n_(pad10-l) Если студент сдал экзамен</p>\n<p>_(pad20-l) Прибавить единицу к счётчику сдавших</p>\n<p>_(pad10-l) Иначе</p>\n<p>_(pad20-l) Прибавить единицу к счётчику студентов\n[/spoiler]</p>\n<p>_  <em>Код:</em>\n[spoiler=показать/скрыть]</p>\n<p>_  <em>Интерфейс класса</em>\n[pre lang=cplusplus]\n//рис. 4.16: Analysis.h\n// Определение класса Analysis, анализирующего результаты экзамена.\n// Элемент-функции определяются в Analysis.cpp</p>\n<p>class Analysis\n{\npublic:\nvoid processExamResults (); // обработать 10 студентов\n}; // конец класса Analysis\n[/pre]</p>\n<p>_  <em>Реализация класса</em>\n[pre lang=cplusplus]\n// Рис 4.17</p>\n<h1>include <iostream></h1>\n<p>using std::cin;\nusing std::cout;\nusing std::endl;</p>\n<p>// Включить определение класса Analysis из Analysis.h</p>\n<h1>include "Analysis.h"</h1>\n<p>// Обработать экзаменационные результаты 10 студентов\nvoid Analysis::processExamResults()\n{\n// инициализация переменных при объявлении\nint passes = 0; // число сдавших\nint failures = 0; // число провалившихся\nint studentCounter = 1; // счётчик студентов\nint result; // один результат экзамена (1 = сдал, 2 = не сдал)</p>\n<pre><code>//обработать 10 студентов, используя цикл по счётчику\nwhile (studentCounter &#x3C;= 10)\n{\n    // запросить у пользвателя и ввести значение\n    cout &#x3C;&#x3C; "Enter result (1 = pass, 2 = fail) : ";\n    cin >> result; // ввести результат\n    // if..else вложенный в while\n    if( result == 1)\n    {\n        passes = passes +1;\n    }\n    else\n    {\n        failures = failures +1;\n    }\n    // увеличить studentCounter на 1, что-бы цикл мог закончиться\n    studentCounter = studentCounter + 1;\n}//конец цикла while\n\n//Этап завершения; вывести число сдавших и не сдавших\ncout &#x3C;&#x3C; "Сдавших: " &#x3C;&#x3C; passes &#x3C;&#x3C; "\n</code></pre>\n<p>Провалились " &#x3C;&#x3C; failures &#x3C;&#x3C; endl;\n// определить прошло ли более восьми студентов\nif ( passes > 8 )\ncout\t&#x3C;&#x3C; "Повысить стоимость" &#x3C;&#x3C; endl;\n} // конец функции processExamResults\n[/pre]</p>\n<p>_  <em>Тестирование класса</em>\n[pre lang=cplusplus]\n// рис 4.18</p>\n<h1>include  "Analysis.h"</h1>\n<p>int main()\n{\nAnalysis application;\napplication.processExamResults();\nreturn 0;\n}\n<a href="">/pre</a>\n_  <em>Код на codepad</em>: <a href="http://codepad.org/fC0abboS">codepad</a>\n_  <em>Файлы исходного кода(в архиве):</em>\nul</p>\n<ul>\n<li><a href="http://stud.ashcherbakov.ru/uploads/_pages/17/analysis.7z">Analysis.7z</a>\n/ul\n_  <em>ОС:</em> ArchLinux\n_  <em>IDE:</em> Geany</li>\n</ul>',frontmatter:{date:"2015-10-11 20:52:55",path:"/page/410-formulirovanie-algoritmov-vlozhennye-upravljajushhie-operatory",title:"4.10 Формулирование алгоритмов: вложенные управляющие операторы"}}},pathContext:{}}}});
//# sourceMappingURL=path---page-410-formulirovanie-algoritmov-vlozhennye-upravljajushhie-operatory-112e5cbf1d67a0525a4c.js.map